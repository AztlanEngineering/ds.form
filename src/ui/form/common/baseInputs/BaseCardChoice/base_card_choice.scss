/* @fwrlines/generator-react-component 1.4.0 */

/*

Classes :
.base_card_choice : default

*/

$defaultHeight:calc(var(--s6) * var(--s, 1) * 1em) !default;
$paddingTop:0.6em !default;
$paddingBottom:0.65em !default;
$paddingSide:0.9em !default;
$innerPadding:$paddingTop $paddingSide $paddingBottom !default;
$borderWidth:1px;

$boxShadowColor:var(--cc) !default;
$boxShadowWidth:1px !default;
$boxShadowDefault:$boxShadowWidth 0 0 0 $boxShadowColor,
  0 $boxShadowWidth 0 0 $boxShadowColor,
  $boxShadowWidth $boxShadowWidth 0 0 $boxShadowColor,
  $boxShadowWidth 0 0 0   adowcolor inset,
  0 $boxShadowWidth 0 0   adowcolor inset !default;
//$boxShadow:none;//$boxShadowDefault!default;
$separationMarginTop:calc(var(--s, 1) * 0.4em);

$background:var(--dark-white);//transparent!default;
$border-radius:var(--r) !default;

$inputFontFamily:var(--font-d) !default;
$inputFontWeight:normal !default;
$inputLineHeight:1.3em !default;

$labelMaxWidth:75%;
$labelFontWeight:bold;

$metaFontFamily:var(--font-d);
$metaColor:var(--dark-grey); //Overrides Subtitle by one tone
$metaOpacity:0.9;
$prefixOpacity:0.9;

$border:$borderWidth solid var(--metadata) !default;
$textOpacity:0.75;
$backgroundOpacity:0.3;
$hoverBackground:var(var(--light-grey));
$hoverBackgroundOpacity:0.3;
$hoverTextOpacity:0.85;
$hoverBorder:$borderWidth solid var(--dark-y, var(--primary));
$selectBackground:var(--light-y, var(--primary));
$selectBackgroundOpacity:0.1;
$selectBorder:$borderWidth solid var(--dark-y, var(--primary));
$selectTextOpacity:1;

$disabledColor:var(--dark-grey);
$disabledTextOpacity:0.5;
$disabledBackground:var(--light-grey);
$disabledBackgroundOpacity:0.3;
$disabledMetaOpacity:0.55;
$disabledMetaColor:$disabledColor;
$disabledSelectBorder:$borderWidth solid var(--grey);

$transitionTime:0.3s;

.base_card_choice {
  position: relative;
  margin-bottom: 0;
  height: $defaultHeight;

  & + & {
    margin-top: $separationMarginTop;
  }


  //label:before,
  input[type=checkbox],
  input[type=radio] {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    background: blue !important;
    cursor: pointer;
    width: $defaultHeight;
    height: $defaultHeight;
  }

  input[type=checkbox],
  input[type=radio] {
    display: inline-block;
    opacity: 0;
    z-index: 100;
    vertical-align: middle;
    -webkit-appearance: none;

    &:not(:checked) ~ label {
      //opacity:$notSelectedOpacity;
    }

    &:not(:disabled):checked ~ .content {
      border: $selectBorder;

      label.input_label {
        opacity: $selectTextOpacity;
      }

      &::before {
        opacity: $selectBackgroundOpacity;
        background: $selectBackground;
      }
    }

    &:not(:disabled):not(:checked) ~ .content {
      &:hover {
        border: $hoverBorder;

        label.input_label {
          opacity: $hoverTextOpacity;
        }

        &::before {
          opacity: $hoverBackgroundOpacity;
          background: $hoverBackground;
        }
      }
    }

    &:disabled ~ .content {
      label.input_label {
        opacity: $disabledTextOpacity;
        cursor: unset;
        color: $disabledColor;
      }

      &::before {
        opacity: $disabledBackgroundOpacity;
        background: $disabledBackground;
      }

      .meta {
        opacity: $disabledMetaOpacity;
        color: $disabledMetaColor;
      }
    }

    &:disabled:checked ~ .content {
      border: $disabledSelectBorder;
    }
  }


  > .content {
    position: relative;
    //overflow:hidden;
    z-index: 1;
    //background:var(--cb, $background)aa;
    border: $border;
    border-radius: $border-radius;
    font-size:calc(var(--s0,1) * var(--s, 1) * 1em);
    width: 100%;
    height: 100%;
    line-height: $inputLineHeight;
    transition: all $transitionTime;

    &:focus {
      outline: none; //Applies only on focus, put here to save a condition
    }

    &::before {
      display: block;
      position: absolute;
      top: 0;
      left: 0;
      opacity: $backgroundOpacity;
      //background:$hoverBackground;
      z-index: -1;
      width: 100%;
      height: 100%;
      content: "";
      transition: all $transitionTime;
      -webkit-backdrop-filter: blur(3px);
      backdrop-filter: blur(3px);
    }

    .meta {
      position: absolute;
      top: 50%;
      right: $paddingSide;
      transform: translateY(-50%);
      opacity: $metaOpacity;
      color: $metaColor;
      font-family: $metaFontFamily;

      .prefix {
        opacity: $prefixOpacity;
      }
    }
  }

  label {
    display: block;
    position: relative;
    opacity: $textOpacity;
    width: 100%;
    height: 100%;
    padding: $innerPadding;
    font-weight: $labelFontWeight;
    transition: all $transitionTime;

    > * {
      position: absolute;
      top: 50%;
      left: $paddingSide;
      transform: translateY(-50%);
      max-width: $labelMaxWidth;
    }
  }
}
