/* @fwrlines/generator-react-component 1.4.0 */

/*

Classes :
.base_svg_choice : default

*/
$background:transparent !default;
$inputFontFamily:var(--font-d) !default;
$inputFontWeight:normal !default;
$inputLineHeight:1.3em !default;

$paddingTop:0.6em !default;
$paddingBottom:0.65em !default;
$paddingSide:0.9em !default;

$checkboxHeight:2em !default;
$checkboxPaddingLeft:$checkboxHeight + 1em;
$checkboxInnerPadding:$paddingTop $paddingSide $paddingBottom $checkboxPaddingLeft;
$radioHeight:$checkboxHeight;
//$radioPaddingLeft:$checkboxPaddingLeft;
//$radioInnerPadding:$paddingTop $radioPaddingLeft $paddingBottom $paddingSide;

$checkboxSvgStrokeWidth:10;
$checkboxSvgRectStrokeWidth:12;
$checkboxSvgStrokeDashOffset:100;
$checkboxSvgStrokeDashArray:100;
$checkboxSvgHeight:1.8em;
$checkboxSvgPaddingSide:($checkboxPaddingLeft - $checkboxSvgHeight) /2;
$checkboxSvgRectStroke:var(--z, var(--metadata));
$checkboxSvgPathStroke:var(--y, var(--primary));
$checkboxSvgRectOpacity:0.3;


$radioSvgCircleOpacity:0.8;
$radioSvgCircleStroke:var(--z, var(--metadata));
$radioSvgCircleFill:var(--z, var(--metadata));
$radioSvgCircleCheckedFill:var(--y, var(--primary));
$radioSvgCircleStrokeWidth:10;
//$radioSvgCircleInnerFill:var(--white);
$radioSvgCircleCheckedOpacity:1;
$radioSvgDotFill:var(--y, var(--primary));
$radioSvgDotOpacity:$checkboxSvgRectOpacity;
$radioSvgDotCheckedFill:var(--y, var(--primary));
$radioSvgDotCheckedOpacity:0.8;
$radioSvgPathStroke:var(--y, var(--primary));
$radioSvgStrokeWidth:10;

$notSelectedOpacity:0.63;

$radioSvgDotDashoffset:300;
$radioSvgDotDasharray:300;
$drawFromOffset:130;
$radioDotDrawFromOffset:300;
$animationDuration:0.35s;

.base_svg_choice {
  position: relative;
  //background: var(--x, $background);
  padding: $checkboxInnerPadding;
  line-height: $inputLineHeight;

  label::before,
  input[type=checkbox],
  input[type=radio] {
    position: absolute;
    top: 50%;
    left: $checkboxSvgPaddingSide;
    transform: translateY(-50%);
    cursor: pointer;
    width: $checkboxHeight;
    height: $checkboxHeight;
  }

  input[type=checkbox],
  input[type=radio] {
    display: inline-block;
    opacity: 0;
    z-index: 100;
    vertical-align: middle;
    -webkit-appearance: none;

    &:not(:checked) ~ label {
      opacity: $notSelectedOpacity;
    }
  }

  input[type=checkbox] {
    &:checked ~ svg {
      --svg-odo: #{$drawFromOffset};

      &.cross {
        .cross-1 {
          animation: draw-stroke $animationDuration $animationDuration ease 1 forwards;
        }

        .cross-2 {
          animation: draw-stroke $animationDuration ease 1 forwards;
        }
      }

      &.check {
        path {
          animation: draw-stroke $animationDuration ease 1 forwards;
        }
      }
    }
  }

  input[type=radio] {
    &:checked ~ svg {
      &.circle {
        circle {
          opacity: $radioSvgCircleCheckedOpacity;

          &.outer {
            stroke: $radioSvgCircleCheckedFill;
          }

          &.inner {
            fill: $radioSvgCircleCheckedFill;//$checkboxSvgRectStroke;
          }
        }
      }

      &.dot {
        --svg-odo: #{$radioDotDrawFromOffset};

        circle {
          opacity: $radioSvgDotCheckedOpacity;
          fill: $radioSvgDotCheckedFill;//$checkboxSvgRectStroke;
        }

        path {
          animation: draw-stroke $animationDuration ease 1 forwards;
        }
      }

      &.cross {
        --svg-odo: #{$drawFromOffset};

        circle {
          opacity: $radioSvgCircleCheckedOpacity;
          fill: $radioSvgDotCheckedFill;//$checkboxSvgRectStroke;
        }

        .cross-1 {
          animation: draw-stroke $animationDuration $animationDuration ease 1 forwards;
        }

        .cross-2 {
          animation: draw-stroke $animationDuration ease 1 forwards;
        }

        path {
          stroke: white;
        }
      }
    }
  }

  svg {
    position: absolute;
    top: 50%;
    left: $checkboxSvgPaddingSide;
    transform: translateY(-50%);
    width: $checkboxSvgHeight;
    height: $checkboxSvgHeight;

    rect {
      opacity: $checkboxSvgRectOpacity;
      fill: transparent;
      stroke: $checkboxSvgRectStroke;
      stroke-width: $checkboxSvgRectStrokeWidth;
    }

    path {
      fill: transparent;
      stroke: $checkboxSvgPathStroke;
      stroke-width: $checkboxSvgStrokeWidth;
    }

    circle,
    rect {
      transition: all $animationDuration;
    }

    &.cross,
    &.check {
      path {
        stroke-dasharray: 130;
        stroke-dashoffset: $drawFromOffset;
      }

      circle {
        opacity: $radioSvgCircleOpacity;
        fill: $radioSvgCircleFill;//$checkboxSvgRectStroke;
      }
    }

    &.circle {
      circle {
        &.outer {
          fill: transparent;
          stroke: $radioSvgCircleFill;
          stroke-width: $radioSvgCircleStrokeWidth;//$checkboxSvgRectStroke;
        }

        &.inner {
          opacity: 0.1;
          fill: transparent;
        }
        opacity: $radioSvgCircleOpacity;
        fill: $radioSvgCircleFill;//$checkboxSvgRectStroke;
      }
    }

    &.dot {
      circle {
        //stroke-width:$radioSvgCircleStrokeWidth;
        //stroke:$radioSvgCircleStroke;
        opacity: $radioSvgDotOpacity;
        fill: $radioSvgDotFill;//$checkboxSvgRectStroke;
      }

      path {
        stroke: $radioSvgPathStroke;
        stroke-dasharray: $radioSvgDotDasharray;
        stroke-dashoffset: $radioSvgDotDashoffset;
        stroke-width: $radioSvgStrokeWidth;
      }
    }
  }
}


